{"version":3,"file":"js/Server.64012e23.js","mappings":"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","sources":["webpack://ui/./src/views/Server.vue?77ec","webpack://ui/./src/components/Server.vue?e32a","webpack://ui/src/components/Server.vue","webpack://ui/./src/components/Server.vue?50e2","webpack://ui/./src/components/Server.vue","webpack://ui/src/views/Server.vue","webpack://ui/./src/views/Server.vue?ddb9","webpack://ui/./src/views/Server.vue","webpack://ui/./node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","webpack://ui/./node_modules/vuetify/lib/components/VCombobox/VCombobox.js"],"sourcesContent":["import { VMain } from 'vuetify/lib/components/VMain';\n\nvar render = function render(){var _vm=this,_c=_vm._self._c;return _c(VMain,[_c('Server')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\n\nvar render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.server)?_c(VContainer,[_c(VRow,[_c(VCol,{attrs:{\"cols\":\"12\"}},[_c(VCard,{attrs:{\"dark\":\"\"}},[_c(VCardTitle,[_vm._v(\" Server's interface configuration \")]),_c('div',{staticClass:\"d-flex flex-no-wrap justify-space-between\"},[_c(VCol,{attrs:{\"cols\":\"12\"}},[_c(VTextField,{attrs:{\"label\":\"Public key\",\"disabled\":\"\"},model:{value:(_vm.server.publicKey),callback:function ($$v) {_vm.$set(_vm.server, \"publicKey\", $$v)},expression:\"server.publicKey\"}}),_c(VTextField,{attrs:{\"type\":\"number\",\"rules\":[\n                      v => !!v || 'Listen port is required',\n                    ],\"label\":\"Listen port\",\"required\":\"\"},model:{value:(_vm.server.listenPort),callback:function ($$v) {_vm.$set(_vm.server, \"listenPort\", $$v)},expression:\"server.listenPort\"}}),_c(VCombobox,{attrs:{\"chips\":\"\",\"hint\":\"Write IPv4 or IPv6 CIDR and hit enter\",\"label\":\"Server interface addresses\",\"multiple\":\"\",\"dark\":\"\"},scopedSlots:_vm._u([{key:\"selection\",fn:function({ attrs, item, select, selected }){return [_c(VChip,_vm._b({attrs:{\"input-value\":selected,\"close\":\"\"},on:{\"click\":select,\"click:close\":function($event){_vm.server.address.splice(_vm.server.address.indexOf(item), 1)}}},'v-chip',attrs,false),[_c('strong',[_vm._v(_vm._s(item))]),_vm._v(\"  \")])]}}],null,false,2630951443),model:{value:(_vm.server.address),callback:function ($$v) {_vm.$set(_vm.server, \"address\", $$v)},expression:\"server.address\"}})],1)],1)],1)],1),_c(VCol,{attrs:{\"cols\":\"12\"}},[_c(VCard,{attrs:{\"dark\":\"\"}},[_c(VCardTitle,[_vm._v(\" Client's global configuration \"),_c(VSpacer),_c(VBtn,{attrs:{\"color\":\"warning\"},on:{\"click\":_vm.applyGlobals}},[_vm._v(\" Apply globals to all clients \"),_c(VIcon,{attrs:{\"right\":\"\",\"dark\":\"\"}},[_vm._v(\"mdi-update\")])],1)],1),_c('div',{staticClass:\"d-flex flex-no-wrap justify-space-between\"},[_c(VCol,{attrs:{\"cols\":\"12\"}},[_c(VTextField,{attrs:{\"label\":\"Public endpoint for clients to connect to\",\"rules\":[\n                      v => !!v || 'Public endpoint for clients to connect to is required',\n                    ],\"required\":\"\"},model:{value:(_vm.server.endpoint),callback:function ($$v) {_vm.$set(_vm.server, \"endpoint\", $$v)},expression:\"server.endpoint\"}}),_c(VCombobox,{attrs:{\"chips\":\"\",\"hint\":\"Write IPv4 or IPv6 address and hit enter\",\"label\":\"DNS servers for clients\",\"multiple\":\"\",\"dark\":\"\"},scopedSlots:_vm._u([{key:\"selection\",fn:function({ attrs, item, select, selected }){return [_c(VChip,_vm._b({attrs:{\"input-value\":selected,\"close\":\"\"},on:{\"click\":select,\"click:close\":function($event){_vm.server.dns.splice(_vm.server.dns.indexOf(item), 1)}}},'v-chip',attrs,false),[_c('strong',[_vm._v(_vm._s(item))]),_vm._v(\"  \")])]}}],null,false,1190384403),model:{value:(_vm.server.dns),callback:function ($$v) {_vm.$set(_vm.server, \"dns\", $$v)},expression:\"server.dns\"}}),_c(VCombobox,{attrs:{\"chips\":\"\",\"hint\":\"Write IPv4 or IPv6 address and hit enter\",\"label\":\"Default Allowed IPs for clients\",\"multiple\":\"\",\"dark\":\"\"},scopedSlots:_vm._u([{key:\"selection\",fn:function({ attrs, item, select, selected }){return [_c(VChip,_vm._b({attrs:{\"input-value\":selected,\"close\":\"\"},on:{\"click\":select,\"click:close\":function($event){_vm.server.allowedips.splice(_vm.server.allowedips.indexOf(item), 1)}}},'v-chip',attrs,false),[_c('strong',[_vm._v(_vm._s(item))]),_vm._v(\"  \")])]}}],null,false,2639469619),model:{value:(_vm.server.allowedips),callback:function ($$v) {_vm.$set(_vm.server, \"allowedips\", $$v)},expression:\"server.allowedips\"}}),_c(VTextField,{attrs:{\"type\":\"number\",\"label\":\"Define global MTU\",\"hint\":\"Leave at 0 and let wg-quick take care of MTU\"},model:{value:(_vm.server.mtu),callback:function ($$v) {_vm.$set(_vm.server, \"mtu\", $$v)},expression:\"server.mtu\"}}),_c(VTextField,{attrs:{\"type\":\"number\",\"label\":\"Persistent keepalive interval (seconds)\",\"hint\":\"Leave at 0 if you dont want to specify persistent keepalive\"},model:{value:(_vm.server.persistentKeepalive),callback:function ($$v) {_vm.$set(_vm.server, \"persistentKeepalive\", $$v)},expression:\"server.persistentKeepalive\"}})],1)],1)],1)],1)],1),_c(VRow,[_c(VDivider,{attrs:{\"dark\":\"\"}}),_c(VBtn,{staticClass:\"ma-2\",attrs:{\"color\":\"success\"},on:{\"click\":function($event){return _vm.forceFileDownload()}}},[_vm._v(\" Download server configuration \"),_c(VIcon,{attrs:{\"right\":\"\",\"dark\":\"\"}},[_vm._v(\"mdi-cloud-download-outline\")])],1),_c(VSpacer),_c(VBtn,{staticClass:\"ma-2\",attrs:{\"color\":\"warning\"},on:{\"click\":_vm.update}},[_vm._v(\" Update server configuration \"),_c(VIcon,{attrs:{\"right\":\"\",\"dark\":\"\"}},[_vm._v(\"mdi-update\")])],1),_c(VDivider,{attrs:{\"dark\":\"\"}})],1)],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-container v-if=\"server\">\r\n        <v-row>\r\n            <v-col cols=\"12\">\r\n                <v-card dark>\r\n                    <v-card-title>\r\n                        Server's interface configuration\r\n                    </v-card-title>\r\n                    <div class=\"d-flex flex-no-wrap justify-space-between\">\r\n                        <v-col cols=\"12\">\r\n                            <v-text-field\r\n                                    v-model=\"server.publicKey\"\r\n                                    label=\"Public key\"\r\n                                    disabled\r\n                            />\r\n                            <v-text-field\r\n                                    v-model=\"server.listenPort\"\r\n                                    type=\"number\"\r\n                                    :rules=\"[\r\n                          v => !!v || 'Listen port is required',\r\n                        ]\"\r\n                                    label=\"Listen port\"\r\n                                    required\r\n                            />\r\n                            <v-combobox\r\n                                    v-model=\"server.address\"\r\n                                    chips\r\n                                    hint=\"Write IPv4 or IPv6 CIDR and hit enter\"\r\n                                    label=\"Server interface addresses\"\r\n                                    multiple\r\n                                    dark\r\n                            >\r\n                                <template v-slot:selection=\"{ attrs, item, select, selected }\">\r\n                                    <v-chip\r\n                                            v-bind=\"attrs\"\r\n                                            :input-value=\"selected\"\r\n                                            close\r\n                                            @click=\"select\"\r\n                                            @click:close=\"server.address.splice(server.address.indexOf(item), 1)\"\r\n                                    >\r\n                                        <strong>{{ item }}</strong>&nbsp;\r\n                                    </v-chip>\r\n                                </template>\r\n                            </v-combobox>\r\n                        </v-col>\r\n                    </div>\r\n                </v-card>\r\n            </v-col>\r\n            <v-col cols=\"12\">\r\n                <v-card dark>\r\n                    <v-card-title>\r\n                        Client's global configuration\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn\r\n                                color=\"warning\"\r\n                                @click=\"applyGlobals\"\r\n                        >\r\n                            Apply globals to all clients\r\n                            <v-icon right dark>mdi-update</v-icon>\r\n                        </v-btn>\r\n                    </v-card-title>\r\n                    <div class=\"d-flex flex-no-wrap justify-space-between\">\r\n                        <v-col cols=\"12\">\r\n                            <v-text-field\r\n                                    v-model=\"server.endpoint\"\r\n                                    label=\"Public endpoint for clients to connect to\"\r\n                                    :rules=\"[\r\n                          v => !!v || 'Public endpoint for clients to connect to is required',\r\n                        ]\"\r\n                                    required\r\n                            />\r\n                            <v-combobox\r\n                                    v-model=\"server.dns\"\r\n                                    chips\r\n                                    hint=\"Write IPv4 or IPv6 address and hit enter\"\r\n                                    label=\"DNS servers for clients\"\r\n                                    multiple\r\n                                    dark\r\n                            >\r\n                                <template v-slot:selection=\"{ attrs, item, select, selected }\">\r\n                                    <v-chip\r\n                                            v-bind=\"attrs\"\r\n                                            :input-value=\"selected\"\r\n                                            close\r\n                                            @click=\"select\"\r\n                                            @click:close=\"server.dns.splice(server.dns.indexOf(item), 1)\"\r\n                                    >\r\n                                        <strong>{{ item }}</strong>&nbsp;\r\n                                    </v-chip>\r\n                                </template>\r\n                            </v-combobox>\r\n                            <v-combobox\r\n                                    v-model=\"server.allowedips\"\r\n                                    chips\r\n                                    hint=\"Write IPv4 or IPv6 address and hit enter\"\r\n                                    label=\"Default Allowed IPs for clients\"\r\n                                    multiple\r\n                                    dark\r\n                            >\r\n                                <template v-slot:selection=\"{ attrs, item, select, selected }\">\r\n                                    <v-chip\r\n                                            v-bind=\"attrs\"\r\n                                            :input-value=\"selected\"\r\n                                            close\r\n                                            @click=\"select\"\r\n                                            @click:close=\"server.allowedips.splice(server.allowedips.indexOf(item), 1)\"\r\n                                    >\r\n                                        <strong>{{ item }}</strong>&nbsp;\r\n                                    </v-chip>\r\n                                </template>\r\n                            </v-combobox>\r\n                            <v-text-field\r\n                                    type=\"number\"\r\n                                    v-model=\"server.mtu\"\r\n                                    label=\"Define global MTU\"\r\n                                    hint=\"Leave at 0 and let wg-quick take care of MTU\"\r\n                            />\r\n                            <v-text-field\r\n                                    type=\"number\"\r\n                                    v-model=\"server.persistentKeepalive\"\r\n                                    label=\"Persistent keepalive interval (seconds)\"\r\n                                    hint=\"Leave at 0 if you dont want to specify persistent keepalive\"\r\n                            />\r\n                        </v-col>\r\n                    </div>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n        <v-row>\r\n            <v-divider dark/>\r\n            <v-btn\r\n                    class=\"ma-2\"\r\n                    color=\"success\"\r\n                    v-on:click=\"forceFileDownload()\"\r\n            >\r\n                Download server configuration\r\n                <v-icon right dark>mdi-cloud-download-outline</v-icon>\r\n            </v-btn>\r\n            <v-spacer></v-spacer>\r\n            <v-btn\r\n                    class=\"ma-2\"\r\n                    color=\"warning\"\r\n                    @click=\"update\"\r\n            >\r\n                Update server configuration\r\n                <v-icon right dark>mdi-update</v-icon>\r\n            </v-btn>\r\n            <v-divider dark/>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n<script>\r\n  import {mapActions, mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    name: 'Server',\r\n\r\n    data: () => ({\r\n\r\n    }),\r\n\r\n    computed:{\r\n      ...mapGetters({\r\n        server: 'server/server',\r\n        config: 'server/config',\r\n        clients: 'client/clients',\r\n      }),\r\n    },\r\n\r\n    mounted () {\r\n      this.readServer()\r\n    },\r\n\r\n    methods: {\r\n      ...mapActions('server', {\r\n        errorServer: 'error',\r\n        readServer: 'read',\r\n        updateServer: 'update',\r\n      }),\r\n\r\n      ...mapActions('client', {\r\n        updateClient: 'update',\r\n      }),\r\n\r\n      applyGlobals(){\r\n        this.update()\r\n\r\n        this.clients.forEach(client => {\r\n          client.allowedips = this.server.allowedips\r\n          this.updateClient(client)\r\n        })\r\n      },\r\n\r\n      update() {\r\n        // convert int values\r\n        this.server.listenPort = parseInt(this.server.listenPort, 10);\r\n        this.server.persistentKeepalive = parseInt(this.server.persistentKeepalive, 10);\r\n        this.server.mtu = parseInt(this.server.mtu, 10);\r\n\r\n        // check server addresses\r\n        if (this.server.address.length < 1) {\r\n          this.errorServer('Please provide at least one valid CIDR address for server interface');\r\n          return;\r\n        }\r\n        for (let i = 0; i < this.server.address.length; i++){\r\n          if (this.$isCidr(this.server.address[i]) === 0) {\r\n            this.errorServer(`Invalid CIDR detected, please correct ${this.server.address[i]} before submitting`);\r\n            return\r\n          }\r\n        }\r\n\r\n        // check DNS correct\r\n        for (let i = 0; i < this.server.dns.length; i++){\r\n          if (this.$isCidr(this.server.dns[i] + '/32') === 0) {\r\n            this.errorServer(`Invalid IP detected, please correct ${this.server.dns[i]} before submitting`);\r\n            return\r\n          }\r\n        }\r\n\r\n        // check client AllowedIPs\r\n        if (this.server.allowedips.length < 1) {\r\n          this.errorServer('Please provide at least one valid CIDR address for client allowed IPs');\r\n          return;\r\n        }\r\n        for (let i = 0; i < this.server.allowedips.length; i++){\r\n          if (this.$isCidr(this.server.allowedips[i]) === 0) {\r\n            this.errorServer('Invalid CIDR detected, please correct before submitting');\r\n            return\r\n          }\r\n        }\r\n\r\n        this.updateServer(this.server)\r\n      },\r\n\r\n      forceFileDownload(){\r\n        const url = window.URL.createObjectURL(new Blob([this.config]))\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.setAttribute('download', 'wg0.conf') //or any other extension\r\n        document.body.appendChild(link)\r\n        link.click()\r\n      },\r\n    }\r\n  };\r\n</script>\r\n","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Server.vue?vue&type=template&id=4400306e&\"\nimport script from \"./Server.vue?vue&type=script&lang=js&\"\nexport * from \"./Server.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <v-main>\r\n        <Server/>\r\n    </v-main>\r\n</template>\r\n\r\n<script>\r\n  import Server from '../components/Server'\r\n\r\n  export default {\r\n    name: 'server',\r\n    components: {\r\n      Server\r\n    }\r\n  }\r\n</script>\r\n","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Server.vue?vue&type=template&id=5a6350de&\"\nimport script from \"./Server.vue?vue&type=script&lang=js&\"\nexport * from \"./Server.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val;\n          this.$emit('update:search-input', val);\n        }\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.blur();\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = null;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex];\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem));\n        } else {\n          this.setMenuIndex(-1);\n        }\n\n        this.$emit('update:list-index', this.$refs.menu.listIndex);\n      }\n\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0);\n          this.$emit('update:list-index', this.$refs.menu.listIndex);\n        }\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = null;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      if (!this.multiple && value === '') this.deleteCurrentItem();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.multiple && !this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _a, _b;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/plain', currentItemText);\n      (_b = event.clipboardData) === null || _b === void 0 ? void 0 : _b.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => []\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: () => ({\n    editingIndex: -1\n  }),\n  computed: {\n    computedCounterValue() {\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\n    },\n\n    hasSlot() {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\n    },\n\n    isAnyValueAllowed() {\n      return true;\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null;\n    }\n\n  },\n  methods: {\n    onInternalSearchChanged(val) {\n      if (val && this.multiple && this.delimiters.length) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\n\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\n          this.updateTags();\n        }\n      }\n\n      this.updateMenuDimensions();\n    },\n\n    genInput() {\n      const input = VAutocomplete.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data.on.paste = this.onPaste;\n      return input;\n    },\n\n    genChipSelection(item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\n\n      if (this.multiple) {\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\n          dblclick: () => {\n            this.editingIndex = index;\n            this.internalSearch = this.getText(item);\n            this.selectedIndex = -1;\n          }\n        };\n      }\n\n      return chip;\n    },\n\n    onChipInput(item) {\n      VSelect.options.methods.onChipInput.call(this, item);\n      this.editingIndex = -1;\n    },\n\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown(e) {\n      e.preventDefault(); // If has menu index, let v-select-list handle\n\n      if (this.getMenuIndex() > -1) return;\n      this.$nextTick(this.updateSelf);\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // If user is at selection index of 0\n      // create a new tag\n\n\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\n        this.updateSelf();\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onTabDown(e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\n        e.preventDefault();\n        e.stopPropagation();\n        return this.updateTags();\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e);\n    },\n\n    selectItem(item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing();\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item); // if selected item contains search value,\n        // remove the search string\n\n        if (this.internalSearch && this.multiple && this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())) {\n          this.internalSearch = null;\n        }\n      }\n    },\n\n    setSelectedItems() {\n      if (this.internalValue == null || this.internalValue === '') {\n        this.selectedItems = [];\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\n      }\n    },\n\n    setValue(value) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value);\n    },\n\n    updateEditing() {\n      const value = this.internalValue.slice();\n      const index = this.selectedItems.findIndex(item => this.getText(item) === this.internalSearch); // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n\n      if (index > -1) {\n        const item = typeof value[index] === 'object' ? Object.assign({}, value[index]) : value[index];\n        value.splice(index, 1);\n        value.push(item);\n      } else {\n        value[this.editingIndex] = this.internalSearch;\n      }\n\n      this.setValue(value);\n      this.editingIndex = -1;\n      this.internalSearch = null;\n    },\n\n    updateCombobox() {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return; // The internal search is not matching\n      // the internal value, update the input\n\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot to avoid a double input\n\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips;\n      if (isUsingSlot) this.internalSearch = null;\n    },\n\n    updateSelf() {\n      this.multiple ? this.updateTags() : this.updateCombobox();\n    },\n\n    updateTags() {\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n\n      if (menuIndex < 0 && !this.searchIsDirty || !this.internalSearch) return;\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing();\n      }\n\n      const index = this.selectedItems.findIndex(item => this.internalSearch === this.getText(item)); // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object' ? Object.assign({}, this.selectedItems[index]) : this.internalSearch; // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n\n      if (index > -1) {\n        const internalValue = this.internalValue.slice();\n        internalValue.splice(index, 1);\n        this.setValue(internalValue);\n      } // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n\n\n      if (menuIndex > -1) return this.internalSearch = null;\n      this.selectItem(itemToSelect);\n      this.internalSearch = null;\n    },\n\n    onPaste(event) {\n      var _a;\n\n      this.$emit('paste', event);\n      if (!this.multiple || this.searchIsDirty) return;\n      const pastedItemText = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/vnd.vuetify.autocomplete.item+plain');\n\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\n        event.preventDefault();\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\n      }\n    },\n\n    clearableCallback() {\n      this.editingIndex = -1;\n      VAutocomplete.options.methods.clearableCallback.call(this);\n    }\n\n  }\n});\n//# sourceMappingURL=VCombobox.js.map"],"names":["render","_vm","this","_c","_self","VMain","staticRenderFns","VContainer","VRow","VCol","attrs","VCard","_v","staticClass","VTextField","model","value","server","callback","$$v","$set","expression","v","VCombobox","scopedSlots","_u","key","fn","item","select","selected","VChip","_b","on","$event","address","splice","indexOf","_s","VSpacer","VBtn","applyGlobals","VIcon","dns","allowedips","VDivider","forceFileDownload","update","_e","name","data","computed","config","clients","mounted","readServer","methods","errorServer","updateServer","updateClient","forEach","client","listenPort","parseInt","persistentKeepalive","mtu","length","i","$isCidr","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","component","components","Server","defaultMenuProps","VSelect","offsetY","offsetOverflow","transition","props","autoSelectFirst","type","Boolean","default","filter","Function","queryText","itemText","toLocaleLowerCase","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","classes","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","text","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","valueComparator","internalValue","listData","items","virtualizedItems","watch","addEventListener","onCopy","$refs","input","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","mergeData","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","_a","currentItem","currentItemText","clipboardData","setData","VAutocomplete","extend","delimiters","Array","returnObject","editingIndex","computedCounterValue","toString","$slots","delimiter","d","endsWith","slice","updateTags","options","call","paste","onPaste","genChipSelection","index","chip","componentOptions","listeners","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","stopPropagation","updateEditing","undefined","Object","assign","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","pastedItemText","getData","findExistingIndex"],"sourceRoot":""}